{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","props","refreshItems","axios","get","then","res","setState","items","data","catch","err","console","log","displayCompleted","status","viewCompleted","renderInventory","state","className","scope","map","item","item_name","item_price","toFixed","tax_rate","onClick","addItemToCart","cart","cartItems","i","length","count","new_item","push","removeItemFromCart","indexOf","new_cart","filter","renderCart","checkEmptyCart","renderTotal","total","discounted","parseFloat","toggleDiscount","discount","document","querySelector","style","backgroundColor","renderDiscountButton","this","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.4d914667.chunk.js","sourcesContent":["import './App.css';\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      viewCompleted: false,\n      items: [],\n      cartItems: [],\n      discounted: false,\n    }\n  }\n\n  componentDidMount() {\n    this.refreshItems();\n  }\n\n  refreshItems = () => {\n    axios\n      .get(\"api/items\")\n      .then((res) => this.setState({ items: res.data }))\n      .catch((err) => console.log(err))\n  }\n\n  displayCompleted = (status) => {\n    if (status) {\n      return this.setState({ viewCompleted: true });\n    }\n\n    return this.setState({ viewCompleted: false });\n  }\n\n  renderInventory = () => {\n    const items = this.state.items;\n    return (\n      <div className='inventory'>\n        <div className='table-header'>\n          <h1>Store Inventory</h1>\n          <h1>\n            <i className=\"fas fa-warehouse\"></i>\n          </h1>\n        </div>\n        <table className=\"table table-striped table-dark table-hover\">\n          <thead>\n            <tr>\n              <th scope=\"col\">Item Name</th>\n              <th scope=\"col\">Price</th>\n              <th scope=\"col\">Tax Rate</th>\n              <th scope=\"col\"></th>\n            </tr>\n          </thead>\n          <tbody>\n            {items.map((item) => (\n              <tr>\n                <th scope=\"row\">{item.item_name}</th>\n                <td>{item.item_price.toFixed(2)}</td>\n                <td>{(item.tax_rate)*100}%</td>\n                <td>\n                  <button className=\"add\" onClick={() => this.addItemToCart(item)}>\n                    <i className=\"far fa-plus-square\"></i>\n                  </button>\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n    )\n  }\n\n  addItemToCart = (item) => {\n    const cart = this.state.cartItems;\n    for (let i = 0; i < cart.length; i++) {\n      if (cart[i].item === item) {\n        cart[i].count ++;\n        this.setState({ cartItems: cart })\n        return;\n      }\n    }\n    const new_item = {\n      item: item,\n      count: 1,\n    }\n    cart.push(new_item);\n    this.setState({ cartItems: cart })\n  }\n\n  removeItemFromCart = (item) => {\n    const cart = this.state.cartItems;\n    if (item.count > 1) {\n      cart[cart.indexOf(item)].count --;\n      this.setState({ cartItems: cart })\n    } else {\n      const new_cart = cart.filter((i) => {\n        return i !== item;\n      })\n      this.setState({ cartItems: new_cart })\n    }\n  }\n\n  renderCart = () => {\n    const cart = this.state.cartItems;\n    return (\n      <div className='cart'>\n        <div className='table-header'>\n          <h1>Your Shopping Cart</h1>\n          <h1>\n            <i className=\"fas fa-shopping-cart\"></i>\n          </h1>\n        </div>\n        <table className=\"table table-striped table-dark table-hover\">\n          <thead>\n            <tr>\n              <th scope=\"col\">Item Name</th>\n              <th scope=\"col\">Price</th>\n              <th scope=\"col\">Tax Rate</th>\n              <th scope=\"col\">#</th>\n              <th scope=\"col\"></th>\n            </tr>\n          </thead>\n          <tbody>\n            {cart.map((item) => (\n              <tr>\n                <th scope=\"row\">{item.item.item_name}</th>\n                <td>{item.item.item_price.toFixed(2)}</td>\n                <td>{(item.item.tax_rate)*100}%</td>\n                <td>{item.count}</td>\n                <td>\n                  <button className=\"remove\" onClick={() => this.removeItemFromCart(item)}>\n                    <i className=\"far fa-minus-square\"></i>\n                  </button>\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n        {this.checkEmptyCart()}\n        {this.renderTotal()}\n      </div>\n    )\n  }\n\n  renderTotal = () => {\n    const cart = this.state.cartItems;\n    let total = 0;\n    for (let i = 0; i < cart.length; i++) {\n      total += (cart[i].item.item_price * (cart[i].item.tax_rate + 1) * cart[i].count);\n    }\n    if (this.state.discounted) {\n      total *= 0.9;\n    }\n    return (\n      <div className =\"total\">\n        <span>\n          Checkout Total: \n        </span>\n        <span>\n          {parseFloat(total).toFixed(2)}\n        </span>\n      </div>\n    )\n  }\n\n  checkEmptyCart = () => {\n    if (this.state.cartItems.length === 0) {\n      return (\n        <div className='empty-cart'>\n          <p>\n            Your cart is empty\n          </p>\n        </div>\n      )\n    }\n  }\n\n  toggleDiscount = () => {\n    this.setState({ discounted: !this.state.discounted });\n    const discount = document.querySelector('discount');\n    if (!this.state.discounted) {\n      discount.style.backgroundColor = \"gold\";\n    } else {\n      discount.style.backgroundColor = \"grey\";\n    }\n  }\n\n  renderDiscountButton = () => {\n    return (\n      <div className='discount'>\n        <button onClick={() => this.toggleDiscount(0.9)}>\n          <i className=\"fas fa-tags\"></i>\n        </button>\n      </div>\n    )\n  }\n\n  render() {\n    return (\n      <div className='main'>\n        {this.renderInventory()}\n        {this.renderCart()}\n        {this.renderDiscountButton()}\n      </div>\n    )\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}